$date
	Sun Dec 15 23:01:26 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module selevytest $end
$var wire 4 ! gout [3:0] $end
$var reg 1 " CLK $end
$var reg 1 # reset $end
$scope module sel $end
$var wire 1 " CLK $end
$var wire 1 # reset $end
$var wire 32 $ signextnr_out [31:0] $end
$var wire 32 % rom_out [31:0] $end
$var wire 32 & rf_write_data [31:0] $end
$var wire 1 ' rf_regwrite $end
$var wire 32 ( rf_out2 [31:0] $end
$var wire 32 ) rf_out1 [31:0] $end
$var wire 32 * ram_read_data [31:0] $end
$var wire 32 + pc_out [31:0] $end
$var wire 32 , pc_addr [31:0] $end
$var wire 4 - out_ja1 [3:0] $end
$var wire 32 . incpc_out [31:0] $end
$var wire 2 / ctrl_storeops [1:0] $end
$var wire 1 0 ctrl_memwrite $end
$var wire 1 1 ctrl_load $end
$var wire 2 2 ctrl_extnrops [1:0] $end
$var wire 1 3 ctrl_branch $end
$var wire 1 4 ctrl_alusrc $end
$var wire 3 5 ctrl_aluops [2:0] $end
$var wire 32 6 br_tgt_target [31:0] $end
$var wire 4 7 aluctrl_out [3:0] $end
$var wire 1 8 alu_zero $end
$var wire 32 9 alu_read2 [31:0] $end
$var wire 32 : alu_out [31:0] $end
$scope module alu $end
$var wire 32 ; read2 [31:0] $end
$var wire 1 8 zero $end
$var wire 32 < read1 [31:0] $end
$var wire 4 = ops [3:0] $end
$var reg 32 > out [31:0] $end
$upscope $end
$scope module aluctrl $end
$var wire 3 ? funct3 [2:0] $end
$var wire 1 @ funct7_30 $end
$var wire 3 A ops [2:0] $end
$var reg 4 B out [3:0] $end
$upscope $end
$scope module br_tgt $end
$var wire 32 C target [31:0] $end
$var wire 32 D addr2 [31:0] $end
$var wire 32 E addr1 [31:0] $end
$upscope $end
$scope module ctrl $end
$var wire 3 F read_funct [2:0] $end
$var wire 7 G read_opcode [6:0] $end
$var reg 3 H aluops [2:0] $end
$var reg 1 4 alusrc $end
$var reg 1 3 branch $end
$var reg 2 I extnrops [1:0] $end
$var reg 1 1 load $end
$var reg 1 0 memwrite $end
$var reg 1 ' regwrite $end
$var reg 2 J storeops [1:0] $end
$upscope $end
$scope module incpc $end
$var wire 32 K out [31:0] $end
$var wire 32 L addr [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 " CLK $end
$var wire 32 M addr [31:0] $end
$var wire 1 # reset $end
$var reg 32 N out [31:0] $end
$scope begin rst $end
$upscope $end
$upscope $end
$scope module pmodout $end
$var wire 1 " CLK $end
$var wire 32 O alu_out [31:0] $end
$var wire 32 P ram_read_data [31:0] $end
$var wire 4 Q out_ja1 [3:0] $end
$var reg 32 R register1 [31:0] $end
$upscope $end
$scope module selevy_ram $end
$var wire 1 " CLK $end
$var wire 32 S addr [31:0] $end
$var wire 1 0 memwrite $end
$var wire 1 # reset $end
$var wire 2 T storeops [1:0] $end
$var wire 32 U write_data [31:0] $end
$var wire 32 V read_data [31:0] $end
$scope begin rst $end
$var integer 32 W i [31:0] $end
$upscope $end
$scope task do_store $end
$upscope $end
$scope task store_byte $end
$upscope $end
$scope task store_half_word $end
$upscope $end
$scope task store_word $end
$upscope $end
$upscope $end
$scope module selevy_regfile $end
$var wire 1 " CLK $end
$var wire 32 X out1 [31:0] $end
$var wire 32 Y out2 [31:0] $end
$var wire 5 Z read1 [4:0] $end
$var wire 5 [ read2 [4:0] $end
$var wire 1 ' regwrite $end
$var wire 1 # reset $end
$var wire 5 \ write1 [4:0] $end
$var wire 32 ] write_data [31:0] $end
$scope begin rst $end
$var integer 32 ^ i [31:0] $end
$upscope $end
$upscope $end
$scope module selevy_rom $end
$var wire 1 " CLK $end
$var wire 32 _ out [31:0] $end
$var wire 32 ` read_addr [31:0] $end
$var wire 1 # reset $end
$scope begin rst $end
$var integer 32 a i [31:0] $end
$upscope $end
$upscope $end
$scope module signextnr $end
$var wire 2 b ops [1:0] $end
$var wire 32 c read [31:0] $end
$var reg 32 d out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
bx 7
bx 6
bx 5
x4
x3
bx 2
x1
x0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
x'
bx &
bx %
bx $
0#
0"
bx !
$end
#50000
1#
#100000
b11 &
b11 ]
b100 ,
b100 M
b10 9
b10 ;
b0 7
b0 =
b0 B
b0 /
b0 J
b0 T
1'
00
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
01
04
03
08
b0 *
b0 P
b0 V
b11 :
b11 >
b11 O
b11 S
b0 6
b0 C
b0 $
b0 D
b0 d
0@
b0 ?
b0 F
b110011 G
b1 \
b10 (
b10 U
b10 Y
b10 [
b1 )
b1 <
b1 X
b1 Z
b1000001000000010110011 %
b1000001000000010110011 _
b1000001000000010110011 c
b100 .
b100 K
b0 +
b0 E
b0 L
b0 N
b0 `
b100000 W
b100000 ^
b10011 a
1"
#150000
0"
#200000
0#
#250000
b10 &
b10 ]
b1001 7
b1001 =
b1001 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
08
b10 :
b10 >
b10 O
b10 S
b11 !
b11 -
b11 Q
b111 ?
b111 F
b1000 ,
b1000 M
b11 R
b1000001111000010110011 %
b1000001111000010110011 _
b1000001111000010110011 c
b1000 .
b1000 K
b100 6
b100 C
b100 +
b100 E
b100 L
b100 N
b100 `
b11 )
b11 <
b11 X
1"
#300000
0"
#350000
b0 &
b0 ]
b1 7
b1 =
b1 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
18
b0 :
b0 >
b0 O
b0 S
1@
b0 ?
b0 F
b1100 ,
b1100 M
b10 !
b10 -
b10 Q
b10 )
b10 <
b10 X
b1000000001000001000000010110011 %
b1000000001000001000000010110011 _
b1000000001000001000000010110011 c
b1100 .
b1100 K
b1000 6
b1000 C
b1000 +
b1000 E
b1000 L
b1000 N
b1000 `
b10 R
1"
#400000
0"
#450000
b10 &
b10 ]
b1000 7
b1000 =
b1000 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
08
b0 *
b0 P
b0 V
b10 :
b10 >
b10 O
b10 S
b0 !
b0 -
b0 Q
0@
b110 ?
b110 F
b10000 ,
b10000 M
b0 R
b1000001110000010110011 %
b1000001110000010110011 _
b1000001110000010110011 c
b10000 .
b10000 K
b1100 6
b1100 C
b1100 +
b1100 E
b1100 L
b1100 N
b1100 `
b0 )
b0 <
b0 X
1"
#500000
0"
#550000
b0 &
b0 ]
b0 9
b0 ;
b0 7
b0 =
b0 B
b11 /
b11 J
b11 T
10
14
0'
b1 2
b1 I
b1 b
b100 5
b100 A
b100 H
18
b0 :
b0 >
b0 O
b0 S
b10 ?
b10 F
b100011 G
b0 \
b0 Z
b10100 ,
b10100 M
b10 !
b10 -
b10 Q
b0 )
b0 <
b0 X
b1000000010000000100011 %
b1000000010000000100011 _
b1000000010000000100011 c
b10100 .
b10100 K
b10000 6
b10000 C
b10000 +
b10000 E
b10000 L
b10000 N
b10000 `
b10 R
1"
#600000
0"
#650000
b10 /
b10 J
b10 T
10
b1 2
b1 I
b1 b
b100 5
b100 A
b100 H
14
b0 !
b0 -
b0 Q
b1 ?
b1 F
b11000 ,
b11000 M
b10 *
b10 P
b10 V
b0 R
b1000000001000000100011 %
b1000000001000000100011 _
b1000000001000000100011 c
b11000 .
b11000 K
b10100 6
b10100 C
b10100 +
b10100 E
b10100 L
b10100 N
b10100 `
1"
#700000
0"
#750000
b1 /
b1 J
b1 T
10
b1 2
b1 I
b1 b
b100 5
b100 A
b100 H
14
b0 ?
b0 F
b11100 ,
b11100 M
b100000000000000010 *
b100000000000000010 P
b100000000000000010 V
b1000000000000000100011 %
b1000000000000000100011 _
b1000000000000000100011 c
b11100 .
b11100 K
b11000 6
b11000 C
b11000 +
b11000 E
b11000 L
b11000 N
b11000 `
1"
#800000
0"
#850000
08
b100 :
b100 >
b100 O
b100 S
b0 &
b0 ]
b100 9
b100 ;
1'
11
b0 /
b0 J
b0 T
00
b10 2
b10 I
b10 b
b1 5
b1 A
b1 H
14
b100 $
b100 D
b100 d
b10 ?
b10 F
b11 G
b1 \
b0 (
b0 U
b0 Y
b100 [
b100000 ,
b100000 M
b0 *
b0 P
b0 V
b10000000010000010000011 %
b10000000010000010000011 _
b10000000010000010000011 c
b100000 .
b100000 K
b100000 6
b100000 C
b11100 +
b11100 E
b11100 L
b11100 N
b11100 `
1"
#900000
0"
#950000
18
b10000000100000000000000010 *
b10000000100000000000000010 P
b10000000100000000000000010 V
b0 :
b0 >
b0 O
b0 S
b1 7
b1 =
b1 B
b0 &
b0 ]
b0 9
b0 ;
13
0'
b0 2
b0 I
b0 b
b0 5
b0 A
b0 H
01
04
b1000 $
b1000 D
b1000 d
b0 ?
b0 F
b1100011 G
b1000 \
b1 [
b101000 ,
b101000 M
b100 !
b100 -
b100 Q
b100000000010001100011 %
b100000000010001100011 _
b100000000010001100011 c
b100100 .
b100100 K
b101000 6
b101000 C
b100000 +
b100000 E
b100000 L
b100000 N
b100000 `
b100 R
1"
#1000000
0"
#1050000
b10 &
b10 ]
08
b100000000000000000 *
b100000000000000000 P
b100000000000000000 V
b10 :
b10 >
b10 O
b10 S
b101 7
b101 =
b101 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
03
b0 $
b0 D
b0 d
b10 9
b10 ;
b0 !
b0 -
b0 Q
b100 ?
b100 F
b110011 G
b1 \
b10 (
b10 U
b10 Y
b10 [
b1 Z
b101100 ,
b101100 M
b0 R
b1000001100000010110011 %
b1000001100000010110011 _
b1000001100000010110011 c
b101100 .
b101100 K
b101000 6
b101000 C
b101000 +
b101000 E
b101000 L
b101000 N
b101000 `
1"
#1100000
0"
#1150000
b10 $
b10 D
b10 d
b10 9
b10 ;
b100 &
b100 ]
b0 7
b0 =
b0 B
14
1'
b10 2
b10 I
b10 b
b10 5
b10 A
b10 H
08
b0 *
b0 P
b0 V
b100 :
b100 >
b100 O
b100 S
b0 ?
b0 F
b10011 G
b110000 ,
b110000 M
b10 !
b10 -
b10 Q
b10 )
b10 <
b10 X
b1000001000000010010011 %
b1000001000000010010011 _
b1000001000000010010011 c
b110000 .
b110000 K
b101110 6
b101110 C
b101100 +
b101100 E
b101100 L
b101100 N
b101100 `
b10 R
1"
#1200000
0"
#1250000
b10000 &
b10000 ]
b10 7
b10 =
b10 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
04
b0 $
b0 D
b0 d
08
b0 *
b0 P
b0 V
b10000 :
b10000 >
b10000 O
b10000 S
b100 !
b100 -
b100 Q
b1 ?
b1 F
b110011 G
b110100 ,
b110100 M
b100 R
b1000001001000010110011 %
b1000001001000010110011 _
b1000001001000010110011 c
b110100 .
b110100 K
b110000 6
b110000 C
b110000 +
b110000 E
b110000 L
b110000 N
b110000 `
b100 )
b100 <
b100 X
1"
#1300000
0"
#1350000
b100 &
b100 ]
b110 7
b110 =
b110 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
08
b0 *
b0 P
b0 V
b100 :
b100 >
b100 O
b100 S
b101 ?
b101 F
b111000 ,
b111000 M
b0 !
b0 -
b0 Q
b10000 )
b10000 <
b10000 X
b1000001101000010110011 %
b1000001101000010110011 _
b1000001101000010110011 c
b111000 .
b111000 K
b110100 6
b110100 C
b110100 +
b110100 E
b110100 L
b110100 N
b110100 `
b10000 R
1"
#1400000
0"
#1450000
b11111111111111111111111111111100 &
b11111111111111111111111111111100 ]
b0 7
b0 =
b0 B
14
1'
b10 2
b10 I
b10 b
b10 5
b10 A
b10 H
b11111111111111111111111111111000 $
b11111111111111111111111111111000 D
b11111111111111111111111111111000 d
08
bx *
bx P
bx V
b11111111111111111111111111111100 :
b11111111111111111111111111111100 >
b11111111111111111111111111111100 O
b11111111111111111111111111111100 S
b11111111111111111111111111111000 9
b11111111111111111111111111111000 ;
b100 !
b100 -
b100 Q
1@
b0 ?
b0 F
b10011 G
b0 (
b0 U
b0 Y
b11000 [
b111100 ,
b111100 M
b100 R
b11111111100000001000000010010011 %
b11111111100000001000000010010011 _
b11111111100000001000000010010011 c
b111100 .
b111100 K
b110000 6
b110000 C
b111000 +
b111000 E
b111000 L
b111000 N
b111000 `
b100 )
b100 <
b100 X
1"
#1500000
0"
#1550000
b11111111111111111111111111111111 &
b11111111111111111111111111111111 ]
b10 9
b10 ;
b111 7
b111 =
b111 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
04
08
bx000000100000001000000000 *
bx000000100000001000000000 P
bx000000100000001000000000 V
b11111111111111111111111111111111 :
b11111111111111111111111111111111 >
b11111111111111111111111111111111 O
b11111111111111111111111111111111 S
b0 $
b0 D
b0 d
b101 ?
b101 F
b110011 G
b10 (
b10 U
b10 Y
b10 [
b1000000 ,
b1000000 M
b1100 !
b1100 -
b1100 Q
b11111111111111111111111111111100 )
b11111111111111111111111111111100 <
b11111111111111111111111111111100 X
b1000000001000001101000010110011 %
b1000000001000001101000010110011 _
b1000000001000001101000010110011 c
b1000000 .
b1000000 K
b111100 6
b111100 C
b111100 +
b111100 E
b111100 L
b111100 N
b111100 `
b11111111111111111111111111111100 R
1"
#1600000
0"
#1650000
b1 &
b1 ]
b11 7
b11 =
b11 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
08
b10000000000000001000000000 *
b10000000000000001000000000 P
b10000000000000001000000000 V
b1 :
b1 >
b1 O
b1 S
b1111 !
b1111 -
b1111 Q
0@
b10 ?
b10 F
b10 \
b1000100 ,
b1000100 M
b11111111111111111111111111111111 R
b1000001010000100110011 %
b1000001010000100110011 _
b1000001010000100110011 c
b1000100 .
b1000100 K
b1000000 6
b1000000 C
b1000000 +
b1000000 E
b1000000 L
b1000000 N
b1000000 `
b11111111111111111111111111111111 )
b11111111111111111111111111111111 <
b11111111111111111111111111111111 X
1"
#1700000
0"
#1750000
b0 &
b0 ]
18
b10000000100000000000000010 *
b10000000100000000000000010 P
b10000000100000000000000010 V
b0 :
b0 >
b0 O
b0 S
b100 7
b100 =
b100 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
b1 9
b1 ;
b11 ?
b11 F
b1 \
b1001000 ,
b1001000 M
b1 !
b1 -
b1 Q
b1 (
b1 U
b1 Y
b1000001011000010110011 %
b1000001011000010110011 _
b1000001011000010110011 c
b1001000 .
b1001000 K
b1000100 6
b1000100 C
b1000100 +
b1000100 E
b1000100 L
b1000100 N
b1000100 `
b1 R
1"
#1800000
0"
#1850000
b0 &
b0 ]
b110 7
b110 =
b110 B
1'
b11 2
b11 I
b11 b
b11 5
b11 A
b11 H
18
b10000000100000000000000010 *
b10000000100000000000000010 P
b10000000100000000000000010 V
b0 :
b0 >
b0 O
b0 S
b0 !
b0 -
b0 Q
b101 ?
b101 F
b1001100 ,
b1001100 M
b0 R
b1000001101000010110011 %
b1000001101000010110011 _
b1000001101000010110011 c
b1001100 .
b1001100 K
b1001000 6
b1001000 C
b1001000 +
b1001000 E
b1001000 L
b1001000 N
b1001000 `
b0 )
b0 <
b0 X
1"
#1900000
0"
#1950000
bx &
bx ]
b1 7
b1 =
b1 B
0'
b0 2
b0 I
b0 b
b0 5
b0 A
b0 H
x8
bx *
bx P
bx V
bx :
bx >
bx O
bx S
bx0000000000000000000xxxxxxxxxxx0 $
bx0000000000000000000xxxxxxxxxxx0 D
bx0000000000000000000xxxxxxxxxxx0 d
bx 9
bx ;
x@
bx ?
bx F
bx G
bx \
bx (
bx U
bx Y
bx [
bx )
bx <
bx X
bx Z
b1010000 ,
b1010000 M
bx %
bx _
bx c
b1010000 .
b1010000 K
bx 6
bx C
b1001100 +
b1001100 E
b1001100 L
b1001100 N
b1001100 `
1"
#2000000
0"
#2050000
